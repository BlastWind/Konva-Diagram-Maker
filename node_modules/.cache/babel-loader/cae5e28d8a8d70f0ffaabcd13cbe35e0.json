{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar defaultProps = {\n  aspectRatio: '1by1'\n};\n\nvar ResponsiveEmbed =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ResponsiveEmbed, _React$Component);\n\n  function ResponsiveEmbed() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ResponsiveEmbed.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        children = _this$props.children,\n        aspectRatio = _this$props.aspectRatio,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"children\", \"aspectRatio\"]);\n\n    var child = React.Children.only(children);\n    return React.createElement(\"div\", _extends({}, props, {\n      className: classNames(bsPrefix, className, aspectRatio && bsPrefix + \"-\" + aspectRatio)\n    }), React.cloneElement(child, {\n      className: classNames(child.props.className, bsPrefix + \"-item\")\n    }));\n  };\n\n  return ResponsiveEmbed;\n}(React.Component);\n\nResponsiveEmbed.defaultProps = defaultProps;\nexport default createBootstrapComponent(ResponsiveEmbed, 'embed-responsive');","map":null,"metadata":{},"sourceType":"module"}